#summary How to specify tests.
#labels Phase-QA

[Index]

NeurospacesTester

= Introduction =

A tester specification is contained in a file with a name that has a suffix of `.t`.  The tester specification tells the tester what application to run, with what command line, command line options, and under what environment.  It is possible to change directory before the application gets executed, or to change to a chrooted environment by using shell pipelines.

After running the application, the tester communicates with the application over stdin/stdout/stderr (general socket communication under development).  The output read from stdout/sterr is checked with expected output (literal output or regular expressions), and mismatches are reported.

Multiple writes to and reads from the application are possible.

If, for whatever reason, the same application is started in more than one test specification, the running application is 'recycled' (unless the `side_effects` option is used, see below).

If there was configuration in effect for an application specific library, the library is checked for changes after a test has been performed.  Changes to the library are not allowed.

= Test Specifications =

A test specification is a file with perl code that returns a perl hash (quite soon, JSON supported too):
{{{
#!/usr/bin/perl -w

use strict;

my $test
    = {
...
...
      };

return $test;

}}}

The content of the hash ref encodes all the tests in the specification.  I discuss the following example, taken from the Neurospaces model container software package:

{{{
#!/usr/bin/perl -w
#

use strict;

my $test
    = {
       command_definitions => [
                               {
                                arguments => [
                                              '-q',
                                             ],
                                command => './neurospacesparse',
                                command_tests => [
                                                  {
                                                   description => "Is neurospaces startup successful ?",
                                                   read => 'neurospaces ',
                                                   timeout => 3,
                                                   write => undef,
                                                  },
                                                  {
                                                   description => "Does the version information match with model-container-build-8 ?",
                                                   read => "model-container-build-8",
                                                   write => "version",
                                                  },
                                                 ],
                                description => "check version information",
                               },
                              ],
       description => "run-time versioning",
       name => 'version.t',
      };


return $test;
}}}

A test specification contains the following keys/values:
    * comment: a general purpose comment, e.g. `this test is broken because ... `.
    * description: describes the purpose of the test in a few words (not an entire paragraph).
    * name: must be the same as the filename, e.g. `version.t`.
    * command_definitions: an array ref with hash refs.  Each hash ref contains the tests for one application run.  See below.

= Command Specification =

Still TODO ...