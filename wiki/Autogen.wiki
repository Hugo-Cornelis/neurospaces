#summary How the build system is set up for development via an autogen.sh script and the interaction with monotone.

[Index]

[InstallerPackage]

[NeurospacesRepositoryAndTheInstaller]

This is a overview of how the build system is set up for development via an autogen.sh script and monotone.

= Introduction =

Developing with software with autotools across different system types and autotools versions can cause some incompatibility problems. To prevent these problems from pestering developers, the neurospaces project implements an autogen.sh script which will automatically generate the necessary compilation files.


= *autogen.sh* =
In each package you will find a script titled autogen.sh which is typically composed of four autotools commands:

  * _aclocal_
  * _autoconf_
  * _autoheader_ 
  * _automake -a --foreign_

The autoheader command is not found in packages that only contain scripting code such as ssp and the gshell. 

Running the script will automatically produce the following files:
  * _aclocal.m4_ 
  * _autom4ne.cache_ 
  * _config.guess_
  * _config.log_
  * _config.status_
  * _config.sub_
  * _depcomp_
  * _install-sh_
  * _missing_
  * _ylwrap_

  * _Makefile.in_
  * _configure_

  * _Makefile_

It will also produce an intermediate file called _Makefile.in_ for each Makefile.am that is expected to produce a _Makefile_ used to compile a part of the project in a directory. Successful execution of autogen.sh will result in a file named *_configure_* being generated. The resulting _configure_ file is used to create the Makefiles that will be called via the *make* command at the top level of a packages source code.

Due to the fact that these files are automatically generated, they are not tracked in the neurospaces projects monotone repositories. Since tracking files which will change from system to system is wasteful and will lead to frustrating forced merge operations. 