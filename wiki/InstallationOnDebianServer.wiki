#summary (IN PROGRESS) This guide outlines installing GENESIS on Debian 5.0.3

= Introduction =

This is a guide for setting up GENESIS 3 on a new Debain 5.0.3 installation, with the tester, code repository and webserver running.


= Setting up the Web Server =

Test run output as well as generated html files from programs like Xrefactory and Doxygen need to be accessible over the internet. This is a guide on adding the apache2 rules to set up a directory that will have its contents displayed via the http server.

== Configuration File /etc/apache2/apache2.conf ==

The default http configuration file for the Apache Web Server in Debian is in the file _/etc/apache2/apache2.conf_. The cleanest method for doing this is to put all of your rules in a separate file, then add an *Include* statement to the default configuration file to include your file. As in this example:

{{{
Include /etc/apache2/my.conf
}}} 


To start your configuration file you'll need a VirtualHost block. So the initial conf file should look like this.

{{{
NameVirtualHost *:80

<VirtualHost *:80>

</VirtualHost>
}}}


In your configuration file you will explicitly declare which directories you want served within the VirtualHost block. If you want to serve the directory _/var/www/tests_ for test output you simply declare a block in the your configuration file for the directory and an Alias directive so that the directory can be accesible via a suffix to the URL (such as http://myserver.edu/tests). Your configuration file should end up looking like this:

{{{
NameVirtualHost *:80

<VirtualHost *:80>

   <Directory /var/www/tests>
     Options +FollowSymLinks Indexes MultiViews
     AllowOverride All
     order allow,deny
     allow from all
   </Directory>

   Alias /tests /var/www/tests/

</VirtualHost>
}}}

For each directory you'd like to serve you must add a block and an alias. 
After you updated your configuration restart apache with this command:

*apache2ctl restart*

You should now be able to view the contents of the directory /var/www/tests from your URL suffixed with your alias.


= Installing the Developer Package =

== Dependencies ==


=== Install gcc ===

Install gcc by executing the following command as root:

*apt-get install gcc*


=== Install autotools ===

Debian by default usually doesn't have development tools installed. You will need to use apt-get to install automake, make with the following commands:

*apt-get install automake*
*apt-get install make*

=== Perl Dependencies ===

Install the following Perl modules from CPAN:

  * YAML
  * IO::Pty
  * Expect 
  * Data::Comparator
  * File::Find::Rule
  * Inline

_note: you must install gcc first in order to compile Perl modules from CPAN._

== Additional Dependencies ==

These additional dependencies must be installed via apt-get:

 * psmisc (for the killall command)
 * daemon (to run neurospaces_serve as a daemon process)
 * sudo 
 * libncurses5-dev
 * flex
 * bison 
 * swig
 * libperl-dev
 * libreadline5-dev
 * python-dev

= Setting up the Monotone Repository Server (still working on this) =

The GENESIS project uses monotone for its source code versioning system. The Developer Package contains scripts for starting up the monotone repositories, but first some things must be set up for it to run correctly. 

== Install Monotone ==

Install monotone, it is freely available from http://monotone.ca/.

Simply download the static binary and place it in your path. 

== Creating a 'monotone' user ==

It is bad practice to run a monotone repository as root so the first thing that should be done is create a non-privileged user for monotone to run as. On the root shell prompt enter:

*useradd monotone -b /home/monotone*

_note: if the user directory is not created, you must create it in the /home directory via the mkdir command: mkdir /home/monotone. Then you must perform a chown to set the permissions: _chown -R monotone:monotone /home/monotone._


= Setting up the Tester = 

<in progress>

== Sending Mail == 

By default Debian is configured for local mail only. To send email over the internet you will need to set the *dc_eximconfig_configtype* option in the file */etc/exim4/update-exim4.conf.conf* from 'local' to 'internet'.

Then perform a restart of exim via the command:

_/etc/init.d/exim4 restart_

