#summary Adding a pulse object to the model-container

= Introduction =

This is essentially a developer blogpost to detail my experience adding a new object to the model-container. 


= Briefing =

First began by reading up on what documentation was available. The document doc/HOWTO.outline in model-container source code contains a section titled *Add new components* which gives a rough outline of the procedure. 

= Adding the Pulse object =

The following subheadings are in order of execution.

=== Adding a new tokenizer ===

First I added a new tokenizer to the analyzer.l file:

{{{
pulse		{	return(TOKEN_PULSE);	}
}}}


=== Add a new token ===

Added a new token to the description.tokens file located in _hierarchy/output/symbols/_ like so:

{{{
%token TOKEN_PULSE
}}}

=== Adding a parser rule ===

A series of grammar rules must now be added to parser.rules file:


At the top of the file there is a union. In this union I add a symbol for my pulse object:

{{{
struct symtab_Pulse * ppulse;
}}}

The prefix p for pulse indicates that this is a pointer. 


Now some more declarations must be added for the lexer. Copying the format of the current declarations you will need to add a block like this for our pulse object:

{{{
%type <phsle> PulseSymbol
%type <ppulse> PulseSectionFront
%type <ppulse> PulseSectionFront1
%type <pidin> PulseSectionFront2
%type <ppulse> PulseDescription
%type <phsle> PulseComponent
}}}


Note: The pool example did not have a "PoolComponent" section but nearly all neighbors contained this so I am adding this to play the averages.