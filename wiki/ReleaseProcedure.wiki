#summary How to make a release ?

= Introduction =

The same procedure is used to building a release of all, or of individual packages.  An official release will be made available for download on sourceforge.  Intermediate releases are for internal use only.

The release procedure normally checks for package correctness using the automake 'distcheck' target.  Official releases must always succeed on this target.  Intermediate releases might fail on this target.


= Details =

  * Define the tag
    * In principal developer tags follow the naming convention '<milestone-number>.  So for example for the latest release at this moment, the release tag is 'des-10', which is the tenth subrelease of the 'des' milestone.
    * Milestone labels point to an important event for development.
    * Tag numbers are monotonically increasing per milestone.
    * Some packages might skip some releases -- milestone labels as well as tag numbers.
    * Internally, the development system refers to the milestone labels as 'major', the numbers as 'minor', and for future use, there is also a 'micro' number possible.
  * Set the tag using 'neurospaces_build'.  Use the options '--tag', eg. 'neurospaces_build --tag des-10'.  Use additional options to select individual packages if needed.
  * Build the tarballs:
    * For public alpha releases: 'neurospaces_build --distcheck'
    * For internal releases, 'neurospaces_build --dist' is ok, but make sure you know what you are doing.
    * Again use additional options to select individual packages if needed.
    * Use the '--certification-report' to annotate the mtn revision with the output of the build, if that is useful.

Note that the build script also automatically installs the packages on the developer machine.  This is for some packages a requirement for 'distcheck' to succeed.